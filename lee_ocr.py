# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'lee_ocr.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

#
# 信号与槽 http://www.broadview.com.cn/article/824
# UI的使用 https://stackoverflow.com/questions/43960916/pyqt5-calling-one-form-from-another
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import QFileInfo
from PyQt5.QtWidgets import QFileDialog

import ocr
from lee_about import *
from lee_help import *

# 设计UI界面
"""ui design
1. 打开文件窗口
2. 保存文件窗口
3. 识别结果窗口
"""

class Ui_OCR(object):
    def setupUi(self, OCR):
        OCR.setObjectName("OCR")
        OCR.resize(495, 476)
        OCR.setStyleSheet("")
        self.centralwidget = QtWidgets.QWidget(OCR)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setObjectName("gridLayout")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout()
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout()
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.lineEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"")
        self.lineEdit.setObjectName("lineEdit")
        self.verticalLayout_2.addWidget(self.lineEdit)
        self.lineEdit_2 = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.verticalLayout_2.addWidget(self.lineEdit_2)
        self.horizontalLayout.addLayout(self.verticalLayout_2)
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setObjectName("verticalLayout")
        self.openButton = QtWidgets.QPushButton(self.centralwidget)
        self.openButton.setObjectName("openButton")
        self.verticalLayout.addWidget(self.openButton)
        self.saveButton = QtWidgets.QPushButton(self.centralwidget)
        self.saveButton.setObjectName("saveButton")
        self.verticalLayout.addWidget(self.saveButton)
        self.horizontalLayout.addLayout(self.verticalLayout)
        self.verticalLayout_3.addLayout(self.horizontalLayout)
        self.textBrowser = QtWidgets.QTextBrowser(self.centralwidget)
        self.textBrowser.setObjectName("textBrowser")
        self.verticalLayout_3.addWidget(self.textBrowser)
        self.gridLayout.addLayout(self.verticalLayout_3, 0, 0, 1, 1)
        OCR.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(OCR)
        self.statusbar.setObjectName("statusbar")
        OCR.setStatusBar(self.statusbar)
        self.menuBar = QtWidgets.QMenuBar(OCR)
        self.menuBar.setGeometry(QtCore.QRect(0, 0, 495, 23))
        self.menuBar.setObjectName("menuBar")
        self.menu = QtWidgets.QMenu(self.menuBar)
        self.menu.setObjectName("menu")
        OCR.setMenuBar(self.menuBar)
        self.act_help = QtWidgets.QAction(OCR)
        self.act_help.setObjectName("act_help")
        self.act_about = QtWidgets.QAction(OCR)
        self.act_about.setObjectName("act_about")
        self.menu.addAction(self.act_help)
        self.menu.addAction(self.act_about)
        self.menuBar.addAction(self.menu.menuAction())

        self.retranslateUi(OCR)
        QtCore.QMetaObject.connectSlotsByName(OCR)
        

    def retranslateUi(self, OCR):
        _translate = QtCore.QCoreApplication.translate
        OCR.setWindowTitle(_translate("OCR", "MainWindow"))
        self.openButton.setText(_translate("OCR", "打开"))
        self.saveButton.setText(_translate("OCR", "保存"))
        self.menu.setTitle(_translate("OCR", "帮助"))
        self.act_help.setText(_translate("OCR", "使用说明"))
        self.act_help.setShortcut(_translate("OCR", "Shift+H"))
        self.act_about.setText(_translate("OCR", "关于"))
        self.act_about.setShortcut(_translate("OCR", "Shift+A"))
        
        # signals and slots
        self.openButton.clicked.connect(self.open_event)
        self.saveButton.clicked.connect(self.save_event)
        self.act_help.triggered.connect(self.help_event)
        self.act_about.triggered.connect(self.about_event)       
        
    def open_event(self):
        self.textBrowser.clear()
        _translate = QtCore.QCoreApplication.translate
        # directory1 = QFileDialog.getOpenFileName(None, "选择文件", "/")
        directory1, filetype = QFileDialog.getOpenFileName(None, "Open a file", "./","Images Files(*.png;*.jpg);;All Files(*)")
        print(directory1)  # 打印文件夹路径
        # path = directory1[0]
        path = directory1
        print(path)
        self.lineEdit.setText(path)
        text=ocr.ReadAndProcess(path)
        self.textBrowser.setText(text)
 
    def save_event(self):
        _translate = QtCore.QCoreApplication.translate
        fileName2, ok2 = QFileDialog.getSaveFileName(None, "Save a file", "./","Text Files(*.txt)")
        print(fileName2)  # 打印保存文件的全部路径（包括文件名和后缀名）
        save_path = fileName2
        # self.lineEdit_2.setText(_translate("OCR", save_path))
        self.lineEdit_2.setText(save_path)
        
        if save_path is not None:
            with open(file=save_path, mode='a+', encoding='utf-8') as file:
                file.write(self.textBrowser.toPlainText())
            print('Saved')
            # self.textBrowser.clear()

    def help_event(self):
        _translate = QtCore.QCoreApplication.translate
        self.Form = QtWidgets.QWidget()
        self.ui = Ui_Form()
        self.ui.setupUi(self.Form)
        self.Form.show()
        
    def about_event(self):
        self.About = QtWidgets.QWidget()
        self.ui = Ui_About()
        self.ui.setupUi(self.About)
        self.About.show()
    
import images_rc



if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    OCR = QtWidgets.QMainWindow()
    ui = Ui_OCR()
    ui.setupUi(OCR)
    OCR.show()
    sys.exit(app.exec_())
